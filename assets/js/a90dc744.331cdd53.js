"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4760],{3905:(e,n,s)=>{s.d(n,{Zo:()=>m,kt:()=>h});var t=s(7294);function a(e,n,s){return n in e?Object.defineProperty(e,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[n]=s,e}function r(e,n){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),s.push.apply(s,t)}return s}function l(e){for(var n=1;n<arguments.length;n++){var s=null!=arguments[n]?arguments[n]:{};n%2?r(Object(s),!0).forEach((function(n){a(e,n,s[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):r(Object(s)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(s,n))}))}return e}function o(e,n){if(null==e)return{};var s,t,a=function(e,n){if(null==e)return{};var s,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)s=r[t],n.indexOf(s)>=0||(a[s]=e[s]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)s=r[t],n.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(a[s]=e[s])}return a}var i=t.createContext({}),p=function(e){var n=t.useContext(i),s=n;return e&&(s="function"==typeof e?e(n):l(l({},n),e)),s},m=function(e){var n=p(e.components);return t.createElement(i.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var s=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(s),u=a,h=c["".concat(i,".").concat(u)]||c[u]||d[u]||r;return s?t.createElement(h,l(l({ref:n},m),{},{components:s})):t.createElement(h,l({ref:n},m))}));function h(e,n){var s=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=s.length,l=new Array(r);l[0]=u;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=s[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,s)}u.displayName="MDXCreateElement"},896:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var t=s(7462),a=(s(7294),s(3905));const r={},l=void 0,o={unversionedId:"DevOps/Kubernetes/Helm_Install",id:"DevOps/Kubernetes/Helm_Install",title:"Helm_Install",description:"[TOC]",source:"@site/docs/DevOps/Kubernetes/Helm_Install.md",sourceDirName:"DevOps/Kubernetes",slug:"/DevOps/Kubernetes/Helm_Install",permalink:"/docs/DevOps/Kubernetes/Helm_Install",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Helm",permalink:"/docs/DevOps/Kubernetes/Helm"},next:{title:"Kubernetes_Install",permalink:"/docs/DevOps/Kubernetes/Kubernetes_Install"}},i={},p=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:3},{value:"Jenkins \uff08\u672a\u5b89\u88c5\u6210\u529f\uff09",id:"jenkins-\u672a\u5b89\u88c5\u6210\u529f",level:3},{value:"Mongodb",id:"mongodb",level:3},{value:"Nginx",id:"nginx",level:3},{value:"PostgrepSQL",id:"postgrepsql",level:3},{value:"Zookeeper",id:"zookeeper",level:3},{value:"Grafana",id:"grafana",level:3},{value:"NFS+StorageClass",id:"nfsstorageclass",level:3},{value:"MySQL",id:"mysql",level:3},{value:"Redis",id:"redis",level:3},{value:"Redis \u96c6\u7fa4-3\u4e3b3\u4ece",id:"redis-\u96c6\u7fa4-3\u4e3b3\u4ece",level:3},{value:"Minio",id:"minio",level:3},{value:"sentry\uff08\u672a\u5b89\u88c5\u6210\u529f\uff09",id:"sentry\u672a\u5b89\u88c5\u6210\u529f",level:3},{value:"Harbor",id:"harbor",level:3},{value:"Kafka\uff08\u672a\u5b89\u88c5\u6210\u529f\uff09",id:"kafka\u672a\u5b89\u88c5\u6210\u529f",level:3},{value:"Memcached",id:"memcached",level:3},{value:"kubernetes-dashboard",id:"kubernetes-dashboard",level:3}],m={toc:p},c="wrapper";function d(e){let{components:n,...s}=e;return(0,a.kt)(c,(0,t.Z)({},m,s,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"[TOC]"),(0,a.kt)("h1",{align:"center"},"Helm_Install"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"By\uff1aweimenghua",(0,a.kt)("br",{parentName:"p"}),"\n","Date\uff1a2023.05.20",(0,a.kt)("br",{parentName:"p"}),"\n","Description\uff1aHelm \u5b89\u88c5\u8f6f\u4ef6")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u53c2\u8003\u8d44\u6599"),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://helm.sh/zh/docs/"},"Helm \u5b98\u65b9\u6587\u6863"),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://artifacthub.io/"},"Helm \u4ed3\u5e93"),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://charts.bitnami.com/"},"bitnami charts"),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/DevOps/Kubernetes/Helm"},"Helm \u5305\u7ba1\u7406\u5668"),"  "),(0,a.kt)("h3",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"helm install [RELEASE_NAME] jenkins/jenkins [flags]\nhelm uninstall [RELEASE_NAME]\n\n1\u3001\u6dfb\u52a0 chart \u4ed3\u5e93\n\u547d\u4ee4\uff1ahelm repo add <\u4ed3\u5e93\u540d\u79f0> <\u4ed3\u5e93 URL>\n\u4e3e\u4f8b\uff1ahelm repo add bitnami https://charts.bitnami.com/bitnami\n\u4e3e\u4f8b\uff1ahelm repo add azure http://mirror.azure.cn/kubernetes/charts/\n\u4e3e\u4f8b\uff1ahelm repo add stable https://charts.helm.sh/stable\n\u4e3e\u4f8b\uff1ahelm repo add stable https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts\n\n2\u3001\u67e5\u770b\u914d\u7f6e\u7684\u4ed3\u5e93\nhelm repo list\n\n3\u3001\u79fb\u9664\u4ed3\u5e93\n\u547d\u4ee4\uff1ahelm repo remove <\u4ed3\u5e93\u540d\u79f0>\n\u4e3e\u4f8b\uff1ahelm repo remove bitnami\n\u4e3e\u4f8b\uff1ahelm repo remove azure\n\n4\u3001\u66f4\u65b0 chart \u5217\u8868\nhelm repo update\n\n5\u3001\u67e5\u770b\u5e94\u7528\uff1f\nhelm list\nhelm -n <namespace> ls\nhelm -n <namespace> ls -a\nhelm -n <namespace> delete <packagename>\n\u4e3e\u4f8b\nhelm -n my-space ls\nhelm -n my-space delete minio\n\n6\u3001\u67e5\u770b ns \u4e0b\u6240\u6709\u8d44\u6e90\nkubectl api-resources --verbs=list --namespaced -o name | xargs -n 1 kubectl get --show-kind --ignore-not-found -n my-space\n\n7\u3001\u5220\u9664 ns \u4e0b\u67d0\u4e2a\u670d\u52a1\u7684\u6240\u6709 pod\nkubectl get pod -n my-space |grep sentry |awk '{print $1}'|xargs kubectl delete pod -n my-space\n\n8\u3001\u67e5\u770b\u72b6\u6001\nhelm status <release_name> -n <namespace>\n\u5176\u4e2d\uff0c`<release_name>` \u662f\u8981\u67e5\u770b\u72b6\u6001\u7684 Helm \u53d1\u5e03\u7684\u540d\u79f0\uff0c`<namespace>` \u662f Helm \u53d1\u5e03\u6240\u5728\u7684 Kubernetes \u540d\u79f0\u7a7a\u95f4\u3002\u5982\u679c\u672a\u6307\u5b9a\u540d\u79f0\u7a7a\u95f4\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528 `default` \u540d\u79f0\u7a7a\u95f4\u3002\n\n\nhelm show values jenkins/jenkins\n")),(0,a.kt)("h3",{id:"jenkins-\u672a\u5b89\u88c5\u6210\u529f"},"Jenkins \uff08\u672a\u5b89\u88c5\u6210\u529f\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"1\u3001\u6dfb\u52a0 Jenkins Helm \u4ed3\u5e93\nhelm repo add jenkins https://charts.jenkins.io\nhelm repo update\n\n2\u3001\u5b89\u88c5 Jenkins\nhelm install jenkins jenkins/jenkins\n\n\u5b89\u88c5 Jenkins \u5e76\u8bbe\u7f6e\u53c2\u6570\nhelm install jenkins jenkins/jenkins\nhelm install jenkins jenkins/jenkins --set adminPassword=admin --set service.type=NodePort --set service.port=30001\n\n3\u3001\u67e5\u770b Jenkins \u7aef\u53e3\u53f7\nkubectl get svc jenkins\n\n4\u3001\u8bbf\u95ee Jenkins\nhttp://<Node_IP>:<Node_Port>/\n\n5\u3001\u8e29\u5751\uff1aJenkins \u6ca1\u6709\u66b4\u9732\u7aef\u53e3\u53f7\n\u67e5\u770b\u5f53\u524d Helm Chart \u7684\u914d\u7f6e\nhelm get values jenkins\nhelm show values jenkins\n\n\u5347\u7ea7 Jenkins Chart \u7684\u914d\u7f6e\nhelm upgrade jenkins jenkins/jenkins --set service.type=NodePort --set service.port=<port_number>\nhelm upgrade jenkins jenkins/jenkins --set service.type=NodePort --set service.port=30001\n\n6\u3001\u62c9\u53d6 Jenkins \u5230\u672c\u5730\u518d\u5b89\u88c5\nhelm fetch jenkins/jenkins --untar\nhelm install jenkins ./jenkins\n\n\u5728 values.yaml \u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a\nService:\n  Type: NodePort\n  Port: 8080\n  TargetPort: 8080\n  NodePort: 30001\n  \nhelm upgrade --install jenkins jenkins/jenkins -f values.yaml -n my-space\n")),(0,a.kt)("h3",{id:"mongodb"},"Mongodb"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"helm repo add bitnami https://charts.bitnami.com/bitnami\n\nhelm install mongodb bitnami/mongodb -n my-space\n\nkubectl get svc mongodb -n my-space\nkubectl get pod -n my-space |grep mongodb\n\n-- mongodb-7b977c49bd-tvb4g mongodb-client\nkubectl exec -it mongodb-client -n my-space -- /bin/bash\nkubectl exec -it mongodb-7b977c49bd-tvb4g -n my-space -- mongo\n")),(0,a.kt)("h3",{id:"nginx"},"Nginx"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'1\u3001\u641c\u7d22\nhelm search repo nginx\n\n2\u3001\u5b89\u88c5\nhelm install my-release bitnami/nginx\n\n3\u3001\u67e5\u770b\u8d44\u6e90\uff08\u67e5\u770b\u7aef\u53e3\uff09\nkubectl get svc --namespace default -w my-release-nginx\n\n4\u3001\u83b7\u53d6 ip \u53ca\u7aef\u53e3\uff08\u672a\u5b9e\u8df5\u6210\u529f\uff09\nexport SERVICE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].port}" services my-release-nginx)\nexport SERVICE_IP=$(kubectl get svc --namespace default my-release-nginx -o jsonpath=\'{.status.loadBalancer.ingress[0].ip}\')\necho "http://${SERVICE_IP}:${SERVICE_PORT}"\n    \n5\u3001\u9a8c\u8bc1\nhttp://127.0.0.1:32433/\n')),(0,a.kt)("h3",{id:"postgrepsql"},"PostgrepSQL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'cat >> values-pord.yaml<<\'EOF\'\nglobal:\n  storageClass: "my-nfs"\n  postgresql:\n    auth:\n      postgresPassword: "root"\n      username: "root"\n      password: "root"\n      database: "demo"\n\n  service:\n    type: NodePort\n    nodePorts:\n      postgresql: 30032\n\nprimary:\n  service:\n    type: NodePort\n    nodePorts:\n      postgresql: 30032\nEOF\n\nhelm upgrade --install postgresql postgresql -f values-pord.yaml\n')),(0,a.kt)("p",null,"Chart \u4ed3\u5e93\u5730\u5740\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://artifacthub.io/packages/helm/bitnami/postgresql"},"https://artifacthub.io/packages/helm/bitnami/postgresql")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'helm repo add bitnami https://charts.bitnami.com/bitnami\n\nhelm repo update\n\n\u62c9\u53d6\u538b\u7f29\u5305\nhelm pull bitnami/postgresql\n\n\u62c9\u53d6\u5b89\u88c5\u5305\nhelm pull bitnami/postgresql --untar\n\nhelm upgrade --install postgresql bitnami/postgresql --namespace myspace --create-namespace\nhelm upgrade --install postgresql bitnami/postgresql -f your-values.yaml --namespace myspace --create-namespace\n\nkubectl get secret --namespace myspace postgresql -o jsonpath="{.data.postgres-password}" | base64 -d\n\u5bc6\u7801\uff1an13x9Eafwl\nkubectl exec -it pod/postgresql-0 -n myspace -- bash\npsql --host 127.0.0.1 -U postgres -d postgres -p 5432\n')),(0,a.kt)("h3",{id:"zookeeper"},"Zookeeper"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'1\u3001\u641c\u7d22\nhelm search repo zookeeper\n\n2\u3001\u5b89\u88c5\n\u65b9\u5f0f\u4e00\uff08\u6ce8\uff1a\u65f6\u95f4\u8f83\u957f\uff09\nhelm install my-zookeeper bitnami/zookeeper -n my-space\n\n\u65b9\u5f0f\u4e8c\nhelm pull bitnami/zookeeper --version 10.2.3\ntar xf zookeeper-10.2.3.tg\nhelm install zookeeper zookeeper \\\n  --namespace my-space --create-namespace \\\n  --set global.storageClass="nfs-client-demo" \\\n  --set replicaCount=3 \\\n  --set auth.enabled=false \\\n  --set persistence.enabled=true \\\n  --set persistence.storageClass="nfs-client-demo"\n\n3\u3001\u67e5\u770b\u72b6\u6001\nhelm status my-zookeeper -n my-space\n\n4\u3001\u8fdb\u5165 pod \u6267\u884c\u547d\u4ee4\nexport POD_NAME=$(kubectl get pods --namespace my-space -l "app.kubernetes.io/name=zookeeper,app.kubernetes.io/instance=my-zookeeper,app.kubernetes.io/component=zookeeper" -o jsonpath="{.items[0].metadata.name}")\n\nkubectl exec -it my-zookeeper-0 -n my-space -- zkCli.sh\n\nkubectl exec -it my-zookeeper-0 -n my-space -- /opt/bitnami/zookeeper/bin/zkServer.sh status\n\n5\u3001\u5220\u9664\nhelm delete my-zookeeper -n my-space\n')),(0,a.kt)("h3",{id:"grafana"},"Grafana"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl create ns monitoring\n\n")),(0,a.kt)("h3",{id:"nfsstorageclass"},"NFS+StorageClass"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u6dfb\u52a0\u4ed3\u5e93\nhelm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner\nhelm repo update\n\n\u9ed8\u8ba4\u955c\u50cf\u4e0b\u8f7d\u7f51\u7edc\u53d7\u9650\uff0c\u4f7f\u7528\u4e2d\u56fd\u5185\u90e8\u955c\u50cf\nhelm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \\\n--set image.repository=easzlab/nfs-subdir-external-provisioner \\\n--set image.tag=v4.0.2 \\\n--set nfs.server=127.0.0.1 \\\n--set nfs.path=/root/nfs/tmp \\\n--set storageClass.name=nfs-client-demo \\\n--set storageClass.reclaimPolicy="Retain" \\\n--namespace my-space --create-namespace\n\n\u68c0\u67e5 StorageClass \u90e8\u7f72\u72b6\u6001\nkubectl get pod -n my-space\nkubectl get sc -n my-space\nhelm list -n my-space\n\n\u5220\u9664 StorageClass\nhelm delete nfs-subdir-external-provisioner -n my-space\n')),(0,a.kt)("h3",{id:"mysql"},"MySQL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u62c9\u53d6\u955c\u50cf\nmkdir mysql-mater-slave/5.7 -p ; cd mysql-mater-slave/5.7\nhelm repo add kubegemsapp https://charts.kubegems.io/kubegemsapp\nhelm repo update\nhelm pull kubegemsapp/mysql --version 4.5.2 --untar\n\n\u8fd0\u884c\u670d\u52a1\nhelm install mysql-1m2s-57 mysql \\\n--set service.type=NodePort \\\n--set service.mnodePort=30006 \\\n--set service.snodePort=30036 \\\n--set root.password=root \\\n--set replication.enabled=true \\\n--set replication.password="root" \\\n--set master.persistence.storageClass="nfs-client-demo" \\\n--set master.persistence.size="50G" \\\n--set slave.replicas=2 \\\n--set slave.persistence.storageClass="nfs-client-demo" \\\n--set slave.persistence.size="50G" \\\n--namespace my-space --create-namespace\n\n\u67e5\u770b\u6240\u6709\nkubectl get all -n my-space\n\n\u8fdb\u5165 pod\nkubectl exec -it pod/mysql-mysql-master-0 -n my-space -- bash\n\n\u8bbf\u95ee\u4e3b\u5e93\nmysql -uroot -proot -h mysql.my-space.svc.cluster.local -P 3306\n\n\u8bbf\u95ee\u4ece\u5e93\nmysql -uroot -proot -h mysql-mysql-slave.my-space.svc.cluster.local -P 3306\nshow slave status\\G;\n')),(0,a.kt)("h3",{id:"redis"},"Redis"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u62c9\u53d6 chart\nhelm pull bitnami/redis\n\n\u62c9\u53d6 chart \u5e76\u89e3\u538b\nhelm pull bitnami/redis --untar\n\n\u5b89\u88c5\u4e00\uff08\u6ce8\uff1a\u65f6\u95f4\u8f83\u957f\uff09\nhelm install my-redis bitnami/redis -n my-space\n\n\u5b89\u88c5\u4e8c\nhelm install redis redis \\\n--set global.storageClass="nfs-client-demo" \\\n--set cluster.enabled=false \\\n--set usePassword=false \\\n--set global.service.type=NodePort \\\n--set global.service.nodePort=30079 \\\n--set master.service.type=NodePort \\\n--set master.service.nodePort=30079 \\\n--namespace my-space --create-namespace\n\n\u67e5\u770b\u72b6\u6001\nhelm status my-redis -n my-space\n\n\u67e5\u770b redis \u5bc6\u7801\nkubectl get secret --namespace my-space my-redis -o jsonpath="{.data.redis-password}" | base64 -d\n\n\u8fdb\u5165 pod\nkubectl exec -it pod/my-redis-master-0 -n my-space -- bash\n\n\u8fdb\u5165 redis \u5ba2\u6237\u7aef\nredis-cli -h 127.0.0.1 -p 6379 -a nHlgvmmqg3\n\n\u8f93\u5165\u547d\u4ee4\nkeys *\n')),(0,a.kt)("h3",{id:"redis-\u96c6\u7fa4-3\u4e3b3\u4ece"},"Redis \u96c6\u7fa4-3\u4e3b3\u4ece"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8e29\u5751\uff1a\u627e\u4e0d\u52307.5.0\u7248\u672c\uff0c\u53bb\u6389\u7248\u672c\u540e\u5b89\u88c5\u6700\u65b0\u7684\nhelm pull bitnami/redis-cluster --version 7.5.0\ntar -xvf redis-cluster-7.5.0.tgz\n\ncat > values-pro.yaml<<'EOF'\nglobal:\n  storageClass: \"nfs-client-demo\"\nusePassword: false\n\nservice:\n  ports:\n    redis: 6379\n\n\nredis:\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 60\n    periodSeconds: 30\n    timeoutSeconds: 10\n    successThreshold: 1\n    failureThreshold: 5\n\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 60\n    periodSeconds: 30\n    timeoutSeconds: 10\n    successThreshold: 1\n    failureThreshold: 5\n\n  startupProbe:\n    enabled: false\n    path: /\n    initialDelaySeconds: 300\n    periodSeconds: 30\n    timeoutSeconds: 10\n    failureThreshold: 6\n    successThreshold: 1\nEOF\n\nhelm install redis-cluster redis-cluster -f values-pro.yaml --namespace my-space --create-namespace\n\nYou have deployed a Redis&reg; Cluster accessible only from within you Kubernetes Cluster.INFO: The Job to create the cluster will be created.To connect to your Redis&reg; cluster:\n\n1. Run a Redis&reg; pod that you can use as a client:\nkubectl run --namespace my-space redis-cluster-client --rm --tty -i --restart='Never' \\\n--image docker.io/bitnami/redis-cluster:7.0.8-debian-11-r0 -- bash\n\n2. Connect using the Redis&reg; CLI:\nredis-cli -c -h redis-cluster\n\nkubectl -n my-space get pods -l helm.sh/chart=redis-cluster-8.3.5\n\nhelm -n my-space ls\nhelm -n my-space delete redis-cluster\n\n(\u5982\u4f55\u4f7f\u7528\uff1f)\n\u96c6\u7fa4\u5185\u90e8\u8bbf\u95ee\uff0c\u901a\u8fc7 svc \u81ea\u52a8\u8d1f\u8f7d\u5747\u8861\uff1a\nredis-cluster.my-space.svc.cluster.local:6379\n\n\u96c6\u7fa4\u5185\u8bbf\u95ee\u5355\u4e2a redis \u5730\u5740\nredis-cluster-0.redis-cluster-headless.my-space\nredis-cluster-1.redis-cluster-headless.my-space\nredis-cluster-2.redis-cluster-headless.my-space\nredis-cluster-3.redis-cluster-headless.my-space\nredis-cluster-4.redis-cluster-headless.my-space\nredis-cluster-5.redis-cluster-headless.my-space\n\n\u9ed8\u8ba4 redis-cluster-0 \u548c redis-cluster-1 \u4e3a\u4e3b\u4ece\uff0c0\u4e3b1\u4ece\n\u9ed8\u8ba4 redis-cluster-2 \u548c redis-cluster-3 \u4e3a\u4e3b\u4ece\uff0c0\u4e3b1\u4ece\n\u9ed8\u8ba4 redis-cluster-4 \u548c redis-cluster-5 \u4e3a\u4e3b\u4ece\uff0c0\u4e3b1\u4ece\n\u96c6\u7fa4\u4e3b\u8282\u70b9\u4e3a\uff1aredis-cluster-0 redis-cluster-2 redis-cluster-4\n\u96c6\u7fa4\u4ece\u8282\u70b9\u4e3a\uff1aredis-cluster-1 redis-cluster-3 redis-cluster-5\n")),(0,a.kt)("h3",{id:"minio"},"Minio"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u6dfb\u52a0 minio \u7684\u4ed3\u5e93\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm repo update\nhelm pull bitnami/minio --version 11.6.5\ntar -zxvf minio-11.6.5.tgz\n\n\u8e29\u5751\uff1a\u5bc6\u7801\u957f\u5ea6\u6709\u9650\u5236\nhelm install minio minio \\\n--namespace my-space --create-namespace \\\n--set global.storageClass="nfs-client-demo" \\\n--set fullnameOverride="minio" \\\n--set mode=distributed \\\n--set auth.rootUser="minioadmin" \\\n--set auth.rootPassword="minioadmin" \\\n--set statefulset.replicas=2 \\\n--set service.type=NodePort \\\n--set service.nodePorts.api=30001 \\\n--set service.nodePorts.console=30002 \\\n--set persistence.size=200Gi\n\nhelm -n my-space ls\nhelm -n my-space delete minio\n\nkubectl get pods -n my-space|grep minio\nkubectl get pvc -n my-space|grep minio\nkubectl get svc -n my-space|grep minio\n\nhttp://127.0.0.1:30002\n')),(0,a.kt)("h3",{id:"sentry\u672a\u5b89\u88c5\u6210\u529f"},"sentry\uff08\u672a\u5b89\u88c5\u6210\u529f\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"1\u3001\u5b89\u88c5\n\u65b9\u5f0f\u4e00\ngit clone https://github.com/mapyJJJ/helm-sentry.git\n\nsed -i 's/nfsclass/nfs-client-demo/' helm-sentry/sentry/charts/redis/values.yaml\nsed -i 's/nfsclass/nfs-client-demo/' helm-sentry/sentry/charts/postgresql/values.yaml\nsed -i 's/nfsclass/nfs-client-demo/' helm-sentry/sentry/values.yaml\n\nhelm install sentry -f sentry/values.yaml --namespace my-space sentry/ \\\n--set filestore.filesystem.persistence.storageClass=nfs-client-demo \\\n--set user.email=admin@sentry.local \\\n--set user.password=root\n\n\u65b9\u5f0f\u4e8c\nhelm install sentry stable/sentry -n my-space\n\n\u67e5\u770b nodeport\uff0c\u76f4\u63a5\u8bbf\u95ee\u8be5\u5730\u5740\nkubectl get service sentry -n my-space \n\nkubectl get secret sentry -n my-space  -o jsonpath='{.data}' \n\nhelm -n my-space ls\nhelm -n my-space delete sentry\n")),(0,a.kt)("h3",{id:"harbor"},"Harbor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u6dfb\u52a0 Chart \u4ed3\u5e93\nhelm repo add harbor https://helm.goharbor.io\n\n\u66f4\u65b0\nhelm repo update\n")),(0,a.kt)("h3",{id:"kafka\u672a\u5b89\u88c5\u6210\u529f"},"Kafka\uff08\u672a\u5b89\u88c5\u6210\u529f\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Chart \u4ed3\u5e93\u5730\u5740\uff1ahttps://artifacthub.io/packages/helm/bitnami/kafka\n\u955c\u50cf github \u5730\u5740\uff1ahttps://github.com/bitnami/bitnami-docker-kafka\n\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm repo update\n\nhelm pull bitnami/kafka --untar --version 19.0.0\ncd kafka\n\n# values-prod.yaml\n## Persistence parameters\n##\ncat > values-pro.yaml<<\'EOF\'\npersistence:\n  enabled: true\n  storageClass: "nfs-client-demo"\n  accessModes:\n    - ReadWriteOnce\n  size: 5Gi\n  ## Mount point for persistence\n  mountPath: /bitnami/kafka\n\n# \u914d\u7f6e zk volumes\nzookeeper:\n  enabled: true\n  persistence:\n    enabled: true\n    storageClass: "nfs-client-demo"\n    accessModes:\n      - ReadWriteOnce\n    size: 8Gi\nEOF\n\nhelm install kafka kafka -f values-prod.yaml -n my-space --create-namespace\n')),(0,a.kt)("h3",{id:"memcached"},"Memcached"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Chart \u4ed3\u5e93\u5730\u5740\uff1ahttps://artifacthub.io/packages/helm/bitnami/memcached\n\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm pull bitnami/memcached --version 6.3.0\ntar zxf memcached-6.3.0.tgz\n\nhelm install memcached memcached -n my-space\n\nkubectl get pod -n my-space\n\nkubectl get svc -n my-space\n\nhelm -n my-space ls\nhelm -n my-space delete memcached\n")),(0,a.kt)("h3",{id:"kubernetes-dashboard"},"kubernetes-dashboard"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u6dfb\u52a0\u4ed3\u5e93\nhelm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/\nhelm repo update\n\n\u4e0b\u8f7d\u5230\u672c\u5730\u5b89\u88c5\nhelm search repo kubernetes-dashboard/kubernetes-dashboard\nhelm pull  kubernetes-dashboard/kubernetes-dashboard --version 6.0.0 --untar\n\nhelm install kubernetes-dashboard kubernetes-dashboard \\\n--set service.type=NodePort \\\n--set service.nodePort=30081 \\\n--set rbac.clusterReadOnlyRole=true \\\n--namespace kubernetes-dashboard --create-namespace\n\n\u68c0\u67e5 kubernetes-dashboard \u90e8\u7f72\u72b6\u6001\nkubectl get pods,svc -n kubernetes-dashboard | grep kubernetes-dashboard\nkubectl get all -n kubernetes-dashboard\n\n\u67e5\u770b\u8bbf\u95ee\u5730\u5740 \u6ce8\uff1ahttps\nexport NODE_PORT=$(kubectl get -n kubernetes-dashboard -o jsonpath=\"{.spec.ports[0].nodePort}\" services kubernetes-dashboard)\nexport NODE_IP=$(kubectl get nodes -o jsonpath=\"{.items[0].status.addresses[0].address}\")\necho https://$NODE_IP:$NODE_PORT/\nhttps://127.0.0.1:30081/#/login\n\n\u5378\u8f7d\u5e94\u7528\nhelm delete kubernetes-dashboard -n my-space\n\ncat >dashboard-admin.yaml<<'EOF'\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: dashboard-admin\n  namespace: kubernetes-dashboard\nEOF\n\n\ncat > dashboard-admin-bind-cluster-role.yaml<<'EOF'\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: dashboard-admin-bind-cluster-role\n  labels:\n    k8s-app: kubernetes-dashboard\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: dashboard-admin\n  namespace: kubernetes-dashboard\nEOF\n\nkubectl apply -f dashboard-admin.yaml\nkubectl apply -f dashboard-admin-bind-cluster-role.yaml\n\ncat >dashboard-token.sh<<'EOF'\n#!/bin/sh\nkubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep dashboard-admin | awk '{print $1}')|grep \"token:\" | awk '{ print $2}'\nEOF\n\nbash dashboard-token.sh\n")))}d.isMDXComponent=!0}}]);